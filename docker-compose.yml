name: nest-microservices

services:
  nats-server:
    restart: unless-stopped
    container_name: nats-server
    image: nats:latest
    ports:
      - ${NATS_UI_PORT}:8222

  orders-db:
    restart: unless-stopped
    container_name: orders-db
    image: postgres:15.6-alpine3.19
    environment:
      - POSTGRES_USER=${ORDERS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${ORDERS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${ORDERS_POSTGRES_DB}
    ports:
      - '${ORDERS_POSTGRES_PORT}:5432'
    volumes:
      - orders-db-volume:/var/lib/postgres/data

  orders-ms:
    restart: unless-stopped
    depends_on:
      - orders-db
    container_name: orders-ms
    build:
      context: ./orders-ms
      dockerfile: dockerfile
      args:
        - PORT=${ORDERS_PORT}
    environment:
      - DATABASE_URL=${ORDERS_DATABASE_URL}
      - NATS_SERVER=${NATS_SERVER}
      - PORT=${ORDERS_PORT}
    ports:
      - '${ORDERS_PORT}:3020'
    volumes:
      - ./orders-ms/src:/app/src
    command: pnpm start:dev

  products-ms:
    restart: unless-stopped
    container_name: products-ms
    build:
      context: ./products-ms
      dockerfile: dockerfile
      args:
        - PORT=${PRODUCTS_PORT}
    environment:
      - DATABASE_URL=${PRODUCTS_DATABASE_URL}
      - NATS_SERVER=${NATS_SERVER}
      - PORT=${PRODUCTS_PORT}
    ports:
      - '${PRODUCTS_PORT}:3010'
    volumes:
      - ./products-ms/src:/app/src
    command: pnpm start:dev

  client-gateway:
    restart: unless-stopped
    container_name: client-gateway
    build:
      context: ./client-gateway
      dockerfile: dockerfile
      args:
        - PORT=${GATEWAY_PORT}
    environment:
      - NATS_SERVER=${NATS_SERVER}
      - PORT=${GATEWAY_PORT}
    ports:
      - '${GATEWAY_PORT}:3100'
    volumes:
      - ./client-gateway/src:/app/src
    command: pnpm start:dev

  payments-ms:
    container_name: payments-ms
    restart: unless-stopped
    build:
      context: ./payments-ms
      dockerfile: dockerfile
    ports:
      - '${PAYMENTS_PORT}:${PAYMENTS_PORT}'
    environment:
      - PORT=${PAYMENTS_PORT}
      - STRIPE_API_KEY=${PAYMENTS_STRIPE_API_KEY}
      - SUCCESS_URL=${PAYMENTS_SUCCESS_URL}
      - CANCEL_URL=${PAYMENTS_CANCEL_URL}
      - ENDPOINT_SECRET=${PAYMENTS_ENDPOINT_SECRET}
    volumes:
      - ./payments-ms/src:/app/src
    command: pnpm start:dev

volumes:
  orders-db-volume:
